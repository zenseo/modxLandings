<?php return array (
  'unique_key' => 'name',
  'preserve_keys' => false,
  'update_object' => true,
  'related_objects' => 
  array (
    'PluginEvents' => 
    array (
      '9a536d3f5d9d48acd1148cd1c7950849' => 
      array (
        'preserve_keys' => true,
        'update_object' => false,
        'unique_key' => 
        array (
          0 => 'pluginid',
          1 => 'event',
        ),
        'class' => 'modPluginEvent',
        'object' => '{"pluginid":0,"event":"OnWebPageInit","priority":0,"propertyset":0}',
        'guid' => '981b0e65c84d7ba98d6be4df28196a93',
        'native_key' => 
        array (
          0 => 0,
          1 => 'OnWebPageInit',
        ),
        'signature' => '56373ea1631cf3a358e5981bb79d90aa',
      ),
    ),
  ),
  'related_object_attributes' => 
  array (
    'PluginEvents' => 
    array (
      'preserve_keys' => true,
      'update_object' => false,
      'unique_key' => 
      array (
        0 => 'pluginid',
        1 => 'event',
      ),
    ),
  ),
  'namespace' => 'mirror',
  'resolve' => 
  array (
    0 => 
    array (
      'type' => 'file',
      'body' => '{"source":"mirror-1.0-beta3\\/modPlugin\\/4a0ad13a7ee5bfb5860975c7897e2e63\\/0\\/","target":"return MODX_CORE_PATH . \'components\\/\';","name":"mirror"}',
    ),
  ),
  'validate' => NULL,
  'vehicle_package' => 'transport',
  'vehicle_class' => 'xPDOObjectVehicle',
  'guid' => 'fc0b66737bb4664d3ec22c589f0a02ef',
  'package' => 'modx',
  'class' => 'modPlugin',
  'signature' => '4a0ad13a7ee5bfb5860975c7897e2e63',
  'native_key' => 1,
  'object' => '{"id":1,"source":0,"property_preprocess":0,"name":"Mirror","description":"Synchronizes elements from filesystem with database","editor_type":0,"category":0,"cache_type":0,"plugincode":"\\/**\\n * @var modX $modx\\n * @var array $scriptProperties\\n *\\/\\n$flushParameterName = trim($modx->getOption(\'flushParameter\', $scriptProperties, \'\'));\\nif ($modx->event->name != \'OnWebPageInit\' || $modx->context->get(\'key\') == \'mgr\' || (!empty($flushParameterName) && !isset($_GET[$flushParameterName]))) {\\n\\treturn;\\n} else {\\n\\t$resourceId = $modx->resourceIdentifier;\\n\\tif ($modx->resourceMethod == \'alias\') {\\n\\t\\t$resourceId = $modx->aliasMap[$resourceId];\\n\\t}\\n\\tif (!is_numeric($resourceId)) {\\n\\t\\treturn;\\n\\t}\\n}\\nunset($scriptProperties[\'flushParameter\']);\\nrequire_once $modx->getOption(\'mirror.core_path\', null, $modx->getOption(\'core_path\') . \'components\\/mirror\\/\') . \'model\\/mirror\\/mirror.class.php\';\\n\\n$objectsMeta = array(\\n\\t\'chunks\' => array(\\n\\t\\t\'extension\' => \'html\',\\n\\t\\t\'className\' => \'modChunk\',\\n\\t\\t\'processComments\' => false,\\n\\t),\\n\\t\'plugins\' => array(\\n\\t\\t\'extension\' => \'php\',\\n\\t\\t\'className\' => \'modPlugin\',\\n\\t\\t\'processComments\' => true,\\n\\t),\\n\\t\'snippets\' => array(\\n\\t\\t\'extension\' => \'php\',\\n\\t\\t\'className\' => \'modSnippet\',\\n\\t\\t\'processComments\' => true,\\n\\t),\\n\\t\'templates\' => array(\\n\\t\\t\'extension\' => \'html\',\\n\\t\\t\'className\' => \'modTemplate\',\\n\\t\\t\'processComments\' => false,\\n\\t),\\n);\\n$mirror = new Mirror($modx, $scriptProperties);\\n$mirror->process($objectsMeta);\\n$modx->cacheManager->refresh();","locked":0,"properties":"a:5:{s:12:\\"cacheEnabled\\";a:7:{s:4:\\"name\\";s:12:\\"cacheEnabled\\";s:4:\\"desc\\";s:24:\\"mirror.prop.cacheEnabled\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:17:\\"mirror:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:15:\\"processComments\\";a:7:{s:4:\\"name\\";s:15:\\"processComments\\";s:4:\\"desc\\";s:27:\\"mirror.prop.processComments\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:17:\\"mirror:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:14:\\"verboseLogging\\";a:7:{s:4:\\"name\\";s:14:\\"verboseLogging\\";s:4:\\"desc\\";s:26:\\"mirror.prop.verboseLogging\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:17:\\"mirror:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"logicalDelete\\";a:7:{s:4:\\"name\\";s:13:\\"logicalDelete\\";s:4:\\"desc\\";s:25:\\"mirror.prop.logicalDelete\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:17:\\"mirror:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:14:\\"flushParameter\\";a:7:{s:4:\\"name\\";s:14:\\"flushParameter\\";s:4:\\"desc\\";s:26:\\"mirror.prop.flushParameter\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:5:\\"flush\\";s:7:\\"lexicon\\";s:17:\\"mirror:properties\\";s:4:\\"area\\";s:0:\\"\\";}}","disabled":0,"moduleguid":"","static":0,"static_file":"","content":"\\/**\\n * @var modX $modx\\n * @var array $scriptProperties\\n *\\/\\n$flushParameterName = trim($modx->getOption(\'flushParameter\', $scriptProperties, \'\'));\\nif ($modx->event->name != \'OnWebPageInit\' || $modx->context->get(\'key\') == \'mgr\' || (!empty($flushParameterName) && !isset($_GET[$flushParameterName]))) {\\n\\treturn;\\n} else {\\n\\t$resourceId = $modx->resourceIdentifier;\\n\\tif ($modx->resourceMethod == \'alias\') {\\n\\t\\t$resourceId = $modx->aliasMap[$resourceId];\\n\\t}\\n\\tif (!is_numeric($resourceId)) {\\n\\t\\treturn;\\n\\t}\\n}\\nunset($scriptProperties[\'flushParameter\']);\\nrequire_once $modx->getOption(\'mirror.core_path\', null, $modx->getOption(\'core_path\') . \'components\\/mirror\\/\') . \'model\\/mirror\\/mirror.class.php\';\\n\\n$objectsMeta = array(\\n\\t\'chunks\' => array(\\n\\t\\t\'extension\' => \'html\',\\n\\t\\t\'className\' => \'modChunk\',\\n\\t\\t\'processComments\' => false,\\n\\t),\\n\\t\'plugins\' => array(\\n\\t\\t\'extension\' => \'php\',\\n\\t\\t\'className\' => \'modPlugin\',\\n\\t\\t\'processComments\' => true,\\n\\t),\\n\\t\'snippets\' => array(\\n\\t\\t\'extension\' => \'php\',\\n\\t\\t\'className\' => \'modSnippet\',\\n\\t\\t\'processComments\' => true,\\n\\t),\\n\\t\'templates\' => array(\\n\\t\\t\'extension\' => \'html\',\\n\\t\\t\'className\' => \'modTemplate\',\\n\\t\\t\'processComments\' => false,\\n\\t),\\n);\\n$mirror = new Mirror($modx, $scriptProperties);\\n$mirror->process($objectsMeta);\\n$modx->cacheManager->refresh();"}',
);